openapi: "3.0.1"
info:
  title: "OpenAPI Plant Store"
  description: "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification"
  license:
    name: "MIT"
  version: "1.0.0"
servers:
  - url: "https://neuranet-ai.com"
security:
  - bearerAuth: []
paths:
  /api/v1/chat:
    post:
      description: "Sends a request to the NeuraNET Text Generation (Chat) API"
      requestBody:
        description: "Payload for sending a message to NeuraNET chatbot"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatRequest"
        required: true
      responses:
        "200":
          description: "Successful response from NeuraNET chatbot"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatResponse"
        "400":
          description: "Error in the request format or content"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/image:
    post:
      summary: "Generate an image"
      description: "Generates an image based on the provided prompt and settings."
      operationId: "generateImage"
      requestBody:
        description: "Payload containing image generation settings and prompt"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageRequest"
        required: true
      responses:
        "200":
          description: "An image has been successfully generated."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageResponse"
components:
  schemas:
    Error:
      type: "object"
      required:
        - "error"
        - "message"
      properties:
        error:
          type: "integer"
          format: "int32"
        message:
          type: "string"
    ChatRequest:
      type: "object"
      required:
        - "settings"
        - "conversation"
      properties:
        settings:
          type: "object"
          required:
            - "model"
          properties:
            model:
              type: "string"
              description: "Model identifier for the chat response generation."
              enum:
                - "nlite"
                - "npro"
                - "npro-vision"
        conversation:
          type: "object"
          required:
            - "history"
          properties:
            history:
              type: "array"
              items:
                oneOf:
                  - $ref: '#/components/schemas/UserMessage'
                  - $ref: '#/components/schemas/AssistantMessage'
                  - $ref: '#/components/schemas/InstructMessage'
              minItems: 1
    UserMessage:
      type: "object"
      required:
        - "sender"
        - "content"
      properties:
        sender:
          type: "string"
          enum:
            - "user"
        content:
          type: "string"
    AssistantMessage:
      type: "object"
      required:
        - "sender"
        - "content"
      properties:
        sender:
          type: "string"
          enum:
            - "assistant"
        content:
          type: "string"
    InstructMessage:
      type: "object"
      required:
        - "sender"
        - "content"
      properties:
        sender:
          type: "string"
          enum:
            - "instruct"
        content:
          type: "string"
    ChatResponse:
      type: "object"
      properties:
        responses:
          type: "array"
          items:
            type: "object"
            properties:
              message:
                type: "string"
                description: "The AI-generated message based on the user input."
          description: "The list of messages forming the conversation history."
    ImageRequest:
      type: "object"
      required:
        - "content"
      properties:
        content:
          type: "object"
          required:
            - "model"
            - "prompt"
          properties:
            model:
              type: "string"
              description: "Model identifier for the image generation."
            prompt:
              type: "string"
              description: "The prompt describing the image to be generated."
            width:
              type: "integer"
              description: "Width of the generated image in pixels."
            height:
              type: "integer"
              description: "Height of the generated image in pixels."
    ImageResponse:
      type: "object"
      properties:
        result:
          type: "array"
          items:
            type: "object"
            properties:
              result-url:
                type: "string"
                description: "URL to the generated image."
          description: "Array of results including URLs to the generated images."
securitySchemes:
  bearerAuth:
    type: "http"
    scheme: "bearer"
